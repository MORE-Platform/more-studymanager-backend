spring:
  main:
    banner-mode: off
  application:
    name: "More Studymanager"

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${OAUTH2_CLIENT_ID:oauth2-pkce-client}
            client-secret: ${OAUTH2_CLIENT_SECRET:}
            provider: keycloak
            scope:
              - openid
              - profile
              - roles
            authorization-grant-type: authorization_code
        provider:
          keycloak:
            issuer-uri: ${OAUTH2_SERVER:https://auth.more.redlink.io/realms/Auth-Client-Test}
            user-name-attribute: preferred_username
      # This enables the client_credentials grant/flow
      resourceserver:
        jwt:
          issuer-uri: ${spring.security.oauth2.client.provider.keycloak.issuer-uri}

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DBNAME:more}
    username: ${POSTGRES_USER:more}
    password: ${POSTGRES_PASSWORD:more}
    name: ${POSTGRES_DBNAME:more}

  session:
    store-type: redis

  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}

server:
  forward-headers-strategy: framework
  error:
    include-exception: true
    include-message: always

elastic:
  host: ${ELASTIC_HOST:localhost}
  port: ${ELASTIC_PORT:9200}
  number_of_shards: 3

management:
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
      group:
        liveness:
          show-components: always
          include:
            - ping
            - diskSpace
        readiness:
          show-components: always

more:
  auth:
    global-roles:
      more-viewer:
        - 'more-viewer'
        - 'study-access' # deprecated
      more-operator:
        - 'more-operator'
        - 'study-creator' # deprecated
